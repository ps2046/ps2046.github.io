<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ps2046.github.io/</id><title>ps's Blog</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-10-01T08:54:41+09:00</updated> <author> <name>ps.jang</name> <uri>https://ps2046.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ps2046.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ps2046.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 ps.jang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[blog] github blog comments (utterances)</title><link href="https://ps2046.github.io/posts/blog-comments-utterances/" rel="alternate" type="text/html" title="[blog] github blog comments (utterances)" /><published>2021-09-22T00:00:00+09:00</published> <updated>2021-09-22T00:00:00+09:00</updated> <id>https://ps2046.github.io/posts/blog-comments-utterances/</id> <content src="https://ps2046.github.io/posts/blog-comments-utterances/" /> <author> <name>ps.jang</name> </author> <category term="blog" /> <category term="admin" /> <summary> GitHub Blog 댓글로 Disqus를 사용 얼마 전 github.io 블로그를 개설면서 Disqus라는 댓글기능을 많이 사용하고 있어서 아무 문제없이 가입하고 설정 후 사용하게 되었다. 두둥…. 하지만 며칠 뒤 부터 댓글 기능 위 아래에.. 광고가 붙기 시작했다. 화면의 1/3정도 차지하는 광고들이 너무 지저분하여 대체할수 있는 댓글 기능을 찾기 시작했다. 그래서 선택한 것은 utterances 라는 Github App 무료이고 광고가 없고 오픈소스라는 장점이 있다. 바닐라 타입스크립트를 사용한 경량의 댓글 위젯이다. github OAuth flow를 따르기는 하지만 대부분 댓글을 다는 사람도 github 사용자라고 생각되기 때문에 사용하게 되었다. uttera... </summary> </entry> <entry><title>[linux] 시스템 성능 분석 관련 명령어</title><link href="https://ps2046.github.io/posts/00.linux_system_analysis/" rel="alternate" type="text/html" title="[linux] 시스템 성능 분석 관련 명령어" /><published>2021-02-20T00:00:00+09:00</published> <updated>2021-08-26T00:00:00+09:00</updated> <id>https://ps2046.github.io/posts/00.linux_system_analysis/</id> <content src="https://ps2046.github.io/posts/00.linux_system_analysis/" /> <author> <name>ps.jang</name> </author> <category term="linux" /> <category term="command" /> <summary> Linux System 분석 관련 명령어 uptime dotori17@PS-PERSNAL:~$ uptime 23:23:45 up 8:40, 0 users, load average: 0.52, 0.58, 0.59 서버가 시작한지 얼마나 되는지 확인 load average (1분, 5분, 15분 평균값) : 0에 가까울수록 좋음. 1분 평균이 5분, 15분 평균보다 높다면 상황이 지속적으로 발생 중인 상태 dmesg dotori17@PS-PERSNAL:~$ dmesg | tail [ 0.010928] Microsoft 4.4.0-19041.1151-Microsoft 4.4.35 시스템 메시지를 확인 vmstat 1 dotori17@PS-PERSNAL:~$... </summary> </entry> <entry><title>[kubernetes-실습] HA(High Availability) 구성 - master node</title><link href="https://ps2046.github.io/posts/24.kubernetes_HA/" rel="alternate" type="text/html" title="[kubernetes-실습] HA(High Availability) 구성 - master node" /><published>2021-01-26T15:00:00+09:00</published> <updated>2021-08-26T00:00:00+09:00</updated> <id>https://ps2046.github.io/posts/24.kubernetes_HA/</id> <content src="https://ps2046.github.io/posts/24.kubernetes_HA/" /> <author> <name>ps.jang</name> </author> <category term="Kubernetes" /> <category term="Kubernetes Administration Course" /> <summary> master node 2대를 추가해 H.A 구성을 해보자. [ 방법 ] 트래픽을 받도록 load balancer로 배포한다. HAProxy는 배포가 쉬운편이다. start하여 현재 동작중인 master node를 확인한다. k8smaster2,3번 노드에 kubernetes software를 설치한다. (이 과정은 기존 worker node를 이미지 떠서 만들면 더 편할 듯하다.) k8smaster2번을 master node에 join 한다. 기존에 worker node 추가때 사용하던 kubeadm join 으로 부터 추가적으로 hash와 flag가 필요할 것이다. k8smaster3번을 master node에 join 한다. haproxy에 3개의 master를 사용하도록 설... </summary> </entry> <entry><title>[kubernetes-실습] Security - Authentication, Authorization, Admission</title><link href="https://ps2046.github.io/posts/23.kubernetes_Security_Authentication_Authorization_Admission/" rel="alternate" type="text/html" title="[kubernetes-실습] Security - Authentication, Authorization, Admission" /><published>2021-01-26T14:00:00+09:00</published> <updated>2021-08-26T00:00:00+09:00</updated> <id>https://ps2046.github.io/posts/23.kubernetes_Security_Authentication_Authorization_Admission/</id> <content src="https://ps2046.github.io/posts/23.kubernetes_Security_Authentication_Authorization_Admission/" /> <author> <name>ps.jang</name> </author> <category term="Kubernetes" /> <category term="Kubernetes Administration Course" /> <summary> Security Test Kubernetes 클러스터는 사용자의 유형으로 service accoount와 normal users 가 있지만 normal users는 외부 서비스에 의해 관리된다. normal users를 나타낼 개체가 없고, 또한 API 호출을 통해 추가할 수도 없다. 하지만 service account를 추가할 수 있다. RBAC을 사용하여 개발자 devJang을 위한 네임스페이스 내의 행동에 대한 접근을 테스트해 본다. Authentication, Authorization 두개의 테스트용 dev, prod namespace를 생성한다. # dev, prod의 두개 namespace를 생성한다. ps0107@k8smaster1:~$ kubectl create ... </summary> </entry> <entry><title>[kubernetes-실습] Security - TLS</title><link href="https://ps2046.github.io/posts/22.kubernetes_Security_TLS/" rel="alternate" type="text/html" title="[kubernetes-실습] Security - TLS" /><published>2021-01-26T13:00:00+09:00</published> <updated>2021-08-26T00:00:00+09:00</updated> <id>https://ps2046.github.io/posts/22.kubernetes_Security_TLS/</id> <content src="https://ps2046.github.io/posts/22.kubernetes_Security_TLS/" /> <author> <name>ps.jang</name> </author> <category term="Kubernetes" /> <category term="Kubernetes Administration Course" /> <summary> Working with TLS # 마스터 노드와 보조 노드 모두에서 kubelet 을 보자 . # kube-apiserver 는 cerificates 과 authorization mode와 같은 보안 정보를 보여준다. # kubelet 은 systemd 서비스이므로 아래와 같이 상태를 볼수 있다. # 아래 CGroup 정보에 보면 설정 파일들이 어디에 있는지 알수 있다. ps0107@k8smaster1:~$ systemctl status kubelet.service ● kubelet.service - kubelet: The Kubernetes Node Agent Loaded: loaded (/lib/systemd/system/kubelet.service; enabled; vendor pres... </summary> </entry> </feed>
