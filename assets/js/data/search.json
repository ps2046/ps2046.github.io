[ { "title": "[blog] github blog comments (utterances)", "url": "/posts/blog-comments-utterances/", "categories": "blog, admin", "tags": "blog, comments, 댓글기능, utterances", "date": "2021-09-22 00:00:00 +0900", "snippet": "GitHub Blog 댓글로 Disqus를 사용 얼마 전 github.io 블로그를 개설면서 Disqus라는 댓글기능을 많이 사용하고 있어서 아무 문제없이 가입하고 설정 후 사용하게 되었다. 두둥…. 하지만 며칠 뒤 부터 댓글 기능 위 아래에.. 광고가 붙기 시작했다. 화면의 1/3정도 차지하는 광고들이 너무 지저분하여 대체할수 있는 댓글 기능을 찾기 시작했다.그래서 선택한 것은 utterances 라는 Github App 무료이고 광고가 없고 오픈소스라는 장점이 있다. 바닐라 타입스크립트를 사용한 경량의 댓글 위젯이..." }, { "title": "[linux] 시스템 성능 분석 관련 명령어", "url": "/posts/00.linux_system_analysis/", "categories": "linux, command", "tags": "linux, bash, monitoring, system", "date": "2021-02-20 00:00:00 +0900", "snippet": "Linux System 분석 관련 명령어uptimedotori17@PS-PERSNAL:~$ uptime 23:23:45 up 8:40, 0 users, load average: 0.52, 0.58, 0.59 서버가 시작한지 얼마나 되는지 확인 load average (1분, 5분, 15분 평균값) : 0에 가까울수록 좋음. 1분 평균이 5분, 15분 평균보다 높다면 상황이 지속적으로 발생 중인 상태dmesgdotori17@PS-PERSNAL:~$ dmesg | tail[ 0.010928] Microsoft 4...." }, { "title": "[kubernetes-실습] HA(High Availability) 구성 - master node", "url": "/posts/24.kubernetes_HA/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 15:00:00 +0900", "snippet": "master node 2대를 추가해 H.A 구성을 해보자.[ 방법 ] 트래픽을 받도록 load balancer로 배포한다. HAProxy는 배포가 쉬운편이다. start하여 현재 동작중인 master node를 확인한다. k8smaster2,3번 노드에 kubernetes software를 설치한다. (이 과정은 기존 worker node를 이미지 떠서 만들면 더 편할 듯하다.) k8smaster2번을 master node에 join 한다. 기존에 worker node 추가때 사용하던 kubeadm join 으로 부터 추..." }, { "title": "[kubernetes-실습] Security - Authentication, Authorization, Admission", "url": "/posts/23.kubernetes_Security_Authentication_Authorization_Admission/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 14:00:00 +0900", "snippet": "Security Test Kubernetes 클러스터는 사용자의 유형으로 service accoount와 normal users 가 있지만 normal users는 외부 서비스에 의해 관리된다. normal users를 나타낼 개체가 없고, 또한 API 호출을 통해 추가할 수도 없다. 하지만 service account를 추가할 수 있다. RBAC을 사용하여 개발자 devJang을 위한 네임스페이스 내의 행동에 대한 접근을 테스트해 본다.Authentication, Authorization 두개의 테스트용 dev, prod..." }, { "title": "[kubernetes-실습] Security - TLS", "url": "/posts/22.kubernetes_Security_TLS/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 13:00:00 +0900", "snippet": "Working with TLS# 마스터 노드와 보조 노드 모두에서 kubelet 을 보자 . # kube-apiserver 는 cerificates 과 authorization mode와 같은 보안 정보를 보여준다. # kubelet 은 systemd 서비스이므로 아래와 같이 상태를 볼수 있다.# 아래 CGroup 정보에 보면 설정 파일들이 어디에 있는지 알수 있다.ps0107@k8smaster1:~$ systemctl status kubelet.service● kubelet.service - kubelet: The Kuber..." }, { "title": "[kubernetes-실습] helm", "url": "/posts/21.kubernetes_helm/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 12:00:00 +0900", "snippet": "helm 복잡한 어플리케이션들을 배포할때 사용하며, yum 이나 apt와 비슷하게 쿠버네티스 안의 package manager 역할을 한다. chart template을 통해서 kubenetes application 을 패키징한다. helm은 chart의 install을 요청하는 client 이다. chart에 따라서 Tiller(서버) 가 cluster resource들을 생성한다.helm과 Tillerhelm은 로컬에 설치한 client를 말하고 Tiller는 쿠버네티스 클러스터 안에서 실행 중인 서버이다.Helm ..." }, { "title": "[kubernetes-실습] CRD (Custom Resource Definition)", "url": "/posts/20.kubernetes_crd/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 11:00:00 +0900", "snippet": "Custom Resource Definition 생성# CRD 생성을 위한 yaml 파일 작성ps0107@k8smaster1:~$ vi crd.yaml apiVersion: apiextensions.k8s.io/v1beta1kind: CustomResourceDefinitionmetadata: name: crontabs.ps.example.comspec: scope: Cluster group: ps.example.com version: v1 names: kind: CronTab plural: crontabs..." }, { "title": "[kubernetes-실습] 로깅과 트러블슈팅 : Metrics와 DashBoard", "url": "/posts/19.kubernetes_logging_trubleshooting_2/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 10:00:00 +0900", "snippet": "Metrics 설정 heapster가 deprecation 되면서 Metrics Server 와 통합되어 개발되고 배포되어지고 있다. 그리고 CNCF의 프로젝트중 프로메테우스도 잘 사용되어지고 있다.# ---------------------------------# Metrics 설정# ---------------------------------# git에서 metrics-server 받아옴.ps0107@k8smaster1:~$ git clone https://github.com/kubernetes-incubator/metri..." }, { "title": "[kubernetes-실습] 로깅과 트러블슈팅 : 로그위치와 로그 출력 보기", "url": "/posts/18.kubernetes_logging_trubleshooting_1/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 09:00:00 +0900", "snippet": "로그 파일들의 위치 알아보기 다양한 로그 파일과 명령 출력 이외에도 journalctl을 사용하여 노드 관점에서 로그를 볼 수 있다. 우리는 로그 파일의 공통적인 위치를 보고, 컨테이너 로그를 보는 명령을 볼 것이다. 다른 컨테이너의 로그를 pod에 적재하는데 전용으로 사용되는 sidecar container의 사용과 같은 다른 로깅 옵션이 있다. Kubernet에서 전체 클러스터 로깅을 아직 사용할 수 없다. 따라서 kubernetes 같이 CNCF 프로젝트 다른 멤버인 fluentd 같은 외부 software를 사..." }, { "title": "[kubernetes-실습] Scheduling - Taint를 이용한 pod 배포 관리", "url": "/posts/17.kubernetes_Scheduling_2/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 08:30:00 +0900", "snippet": "Using Taints to Control Pod Deployment taints를 사용하여 어느곳에 pod가 배치되거나 실행을 허용하도록 관리할수 있다. 노드 그룹에 pod들을 할당하여 추가할때 노드 사용을 제한하거나 pod들을 완전히 대피시킬수 있다. 참고 마스터노드가 처음에 NoSchedule taint로 설정되어 있었던것을 기억할 것이다. 여기서 taint의 3가지 유형을 통해 pod들을 제한하거나 제거하는것을 알아보자.# 8개의 nginx container를 배포하는 deployment를 생성하기 위해 yaml파일을..." }, { "title": "[kubernetes-실습] Scheduling - label 사용한 pod 할당", "url": "/posts/16.kubernetes_Scheduling_1/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 08:00:00 +0900", "snippet": "Assign Pods Using Labels label에 따라 pod 할당 테스트를 위해 세팅# ------------------------------------------# label에 따라 pod 할당 테스트를 위해 세팅# 1. labeling# master : status=vip, worker : status=other# ------------------------------------------# node list 확인. # 실습을 위해서 labels 나 taint 추가된게 없이 ready 상태여야 한다.ps0107@..." }, { "title": "[kubernetes-실습] ingress 간단 실습", "url": "/posts/15.kubernetes_ingress/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 07:30:00 +0900", "snippet": "ingress 설정 많은 서비스들을 클러스터의 외부로 expose 시키거나 호스트 노드의 낮은 숫자의 포트로 expose 하기 위해 ingress controller 또는 service mesh를 적용해야 해야한다.# 간단한 테스트를 위해 nginx deployment를 생성한다. # app 이름은 secondapp으로 한다.ps0107@k8smaster1:~$ kubectl create deployment secondapp --image=nginx ..." }, { "title": "[kubernetes-실습] ResourceQuota 사용 (PVC Count 와 Usage를 제한)", "url": "/posts/14.kubernetes_ResourceQuota/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 07:00:00 +0900", "snippet": "기존 실습 리소스 정리ps0107@k8smaster1:~$ kubectl delete deploy nginx-nfsdeployment.extensions &quot;nginx-nfs&quot; deletedps0107@k8smaster1:~$ kubectl delete pvc pvc-one persistentvolumeclaim &quot;pvc-one&quot; deletedps0107@k8smaster1:~$ kubectl delete pv pvvol-1persistentvolume &quot;pvvol-1&quot; de..." }, { "title": "[kubernetes-실습] PV 와 PVC 생성", "url": "/posts/13.kubernetes_PV_PVC/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 06:30:00 +0900", "snippet": "NFS Server/Client 세팅# NFS Server/Client 세팅# ----------------------------------# master node : NFS Server# worker node : NFS Client# ----------------------------------# master node : NFS Server 세팅ps0107@k8smaster1:~$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y nfs-kernel-serverp..." }, { "title": "[kubernetes-실습] Volumes and Data : ConfigMap 간단 테스트", "url": "/posts/12.kubernetes_Volumes_and_Data_ConfigMap/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 06:00:00 +0900", "snippet": "ConfigMap에 대해 간단하게 테스트 해보자# 주요 색들을 포함한 ConfigMap을 생성해 보자.# 먼저 primary라는 디렉토리를 만들고 색과 관련된 파일들을 생성해본다.ps0107@k8smaster1:~$ mkdir primary ps0107@k8smaster1:~$ echo c &amp;gt; primary/cyan ..." }, { "title": "[kubernetes-실습] Service Resource", "url": "/posts/11.kubernetes_Service_Resource/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 05:40:00 +0900", "snippet": "Deploy A new Service# nginx deployment 배포를 위한 yaml 파일 준비ps0107@k8smaster1:~$ vi nginx-one.yaml apiVersion: extensions/v1beta1kind: Deploymentmetadata: name: nginx-one labels: system: secondary namespace: accountingspec: replicas: 2 template: metadata: labels: app: nginx ..." }, { "title": "[kubernetes-실습] Managing State with Deployments", "url": "/posts/10.Managing_State_with_Deployments/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 05:00:00 +0900", "snippet": "ReplicaSet 동작# ReplicaSet 생성을 위한 yaml 파일 생성ps0107@k8smaster1:~$ vi rs.yamlapiVersion: extensions/v1beta1kind: ReplicaSetmetadata: name: rs-onespec: replicas: 2 template: metadata: labels: system: ReplicaOne spec: containers: - name: nginx image: nginx:1.11.1 ..." }, { "title": "[kubernetes-실습] API 객체", "url": "/posts/09.kubernetes_API/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 04:30:00 +0900", "snippet": "RESTful API Access (토큰 기반 리소스 접근, namespace별 토큰 생성)# api server의 node의 ip와 port 확인# 클러스트 설정 정보 확인ps0107@k8smaster1:~$ kubectl config viewapiVersion: v1clusters:- cluster: certificate-authority-data: DATA+OMITTED server: https://k8smaster:6443 name: kubernetescontexts:- context: cluster:..." }, { "title": "[kubernetes-실습] API AND ACCESS", "url": "/posts/08.kubernetes_API_AND_ACCESS/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 04:00:00 +0900", "snippet": "TLS Access 설정 (인증서 기반의 클러스터 API) api를 통해 직접 호출 할수 있도록 3가지 key를 필요로 한다. ~/.kube/config 경로 안에 있는 아래 3가지 키를 base64로 encording 한 후 각각의 파일로 저장 하여 사용한다. certificate-authority-data client-certificate-data client-key-data # ~/.kube/config 안에 정보를 확인ps0107@k8smaster1:~$ ..." }, { "title": "[kubernetes-실습] 기본 Node 의 maintenance (유지보수)", "url": "/posts/07.Node_maintenance/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 03:30:00 +0900", "snippet": "기본 node maintenance 이번엔 우리의 pod 중 일부가 node 에서 퇴출되고 다른 곳으로 스케줄이 변경되도록 할 것이다. 이것은 기본적인 maintenance 또는 롤링 OS 업데이트 등으로 있을 수 있다.먼저 worker1번 노드를 더이상 스케쥴 되지 않도록 한다. 이때, worker1번 노드에 있는 pod들을 다른 노드들로 퇴출된다.# 현재 master node 이미지 수 확인ps0107@k8smaster1:~$ sudo docker ps | wc -l22# 현재 worker node 이미지 수 확인ps..." }, { "title": "[kubernetes-실습] 좀더 복잡한 deployment 배포해보기", "url": "/posts/06.advance_deployment/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 03:00:00 +0900", "snippet": "좀더 복잡한 deployment microservice 관련 demo 를 이용하여 배포해본다.ps0107@k8smaster1:~$ wget https://raw.githubusercontent.com/microservices-demo/microservices-demo/master/deploy/kubernetes/complete-demo.yaml -O complete-demo.yaml complete-demo.yaml 자세히보기 apiVersion: extensions/v1beta1kind: Dep..." }, { "title": "[kubernetes-실습] namespace 를 위한 resource limit 설정", "url": "/posts/05.kubernetes_namespace_resource_limit/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 02:30:00 +0900", "snippet": "namespace를 위한 리소스 제약# namespace 생성한다.ps0107@k8smaster1:~$ kubectl create namespace limit-test namespace/limit-test created ..." }, { "title": "[kubernetes-실습] deployment 의 CPU, Memory 제약", "url": "/posts/04.kubernetes_deployment_CPU_Memory/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 02:00:00 +0900", "snippet": "deployment 의 리소스 제약 stress tool을 사용하여 실습해 보자. 먼저 stress container yaml 파일을 만들어 제약 조건을 yaml 파일에 추가하면서 테스트 해본다.# 기본으로 stress app 배포ps0107@k8smaster1:~$ kubectl create deployment stress --image vish/stressdeployment.apps/stress created# deployment 리소스 확인ps0107@k8smaster1:~$ kubectl get deployment..." }, { "title": "[kubernetes-실습] 간단한 application 배포, yaml템플릿, 서비스 expose 해보기", "url": "/posts/03.deployment_yaml_service/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 01:30:00 +0900", "snippet": "nginx app 간단하게 배포해보기# nginx app 배포 하기ps0107@k8smaster1:~$ kubectl create deployment nginx --image=nginx deployment.apps/nginx created# 현재 클러스터의 event 확인ps0107@k8smaster1:~$ kubectl get eventsLAST SEEN TYPE REASON OBJECT MESSAGE29s Normal Schedu..." }, { "title": "[kubernetes-실습] 쿠버네티스 클러스트 노드 확장 및 셋팅", "url": "/posts/02.kubernetes_cluster_node_setting/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 01:00:00 +0900", "snippet": "클러스터에 추가할 노드 세팅 master 세팅과 마찬가지로 기본적인 설치 진행 /etc/hosts 파일 설정 필요. kubeadm 을 이용한 설치 및 세팅 참조root@k8sworker1:~# apt-get update &amp;amp;&amp;amp; apt-get upgrade -y# docker 설치 (참고, docker ce - edge:매월 업데이트, stable:3개월 마다 업데이트)root@k8sworker1:~# apt-get install -y docker.io# file 생성 후 main repo ent..." }, { "title": "[kubernetes-실습] kubeadm 을 이용한 설치 및 세팅", "url": "/posts/01.kubeadm_install_setting/", "categories": "Kubernetes, Kubernetes Administration Course", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 00:30:00 +0900", "snippet": "설치를 위한 준비 사항 kubeadm을 이용한 설치 기준 virtualbox 이용시 – master : 3vCPU/4G memory/5G minimal OS – worker : 1vCPU/2G memory/5G minimal OS gcp, aws 이용시 – spec : 2 vCPU/ 7.5G memory – putty 이용 할 경우 .pem or .ppk file 요구 YAML 파일 작성시 유의 사항 – TAB 사용 하면 안되고 white space로 사용 VM 기준 사전 세팅D..." }, { "title": "[kubernetes] Kubernetes Administration(LFS458)", "url": "/posts/00.kubernetes_cka/", "categories": "Kubernetes, Kubernetes Administration Course, var", "tags": "kubernetes, cka, LFS458", "date": "2021-01-26 00:00:00 +0900", "snippet": "kubernetes administration - LFS458 관련kubernetes version : 1.4.0 kubeadm 을 이용한 설치 및 세팅 kubernetes 클러스터 노드 확장 및 셋팅 간단한 application 배포, yaml템플릿, 서비스 expose 해보기 deployment 의 CPU, Memory 제약 namespace 를 위한 resource limit 설정 좀더 복잡한 deployment 배포해보기 기본 Node 의 maintenance (유지보수) API AND ACCESS AP..." } ]
